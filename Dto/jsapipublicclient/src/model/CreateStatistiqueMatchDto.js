/**
 * Swagger SportApplicatioh - OpenAPI 3.0
 * This is a sample Pet Store Server based on the OpenAPI 3.0 specification. You can find out more about Swagger at [https://swagger.io](https://swagger.io). In the third iteration of the pet store, we've switched to the design first approach! You can now help us improve the API whether it's by making changes to the definition itself or to the code. That way, with time, we can improve the API in general, and expose some of the new features in OAS3.  _If you're looking for the Swagger 2.0/OAS 2.0 version of Petstore, then click [here](https://editor.swagger.io/?url=https://petstore.swagger.io/v2/swagger.yaml). Alternatively, you can load via the `Edit > Load Petstore OAS 2.0` menu option!_  Some useful links: - [The Pet Store repository](https://github.com/swagger-api/swagger-petstore) - [The source API definition for the Pet Store](https://github.com/swagger-api/swagger-petstore/blob/master/src/main/resources/openapi.yaml)
 *
 * The version of the OpenAPI document: 1.0.11
 * Contact: apiteam@swagger.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The CreateStatistiqueMatchDto model module.
 * @module model/CreateStatistiqueMatchDto
 * @version 1.0.11
 */
class CreateStatistiqueMatchDto {
    /**
     * Constructs a new <code>CreateStatistiqueMatchDto</code>.
     * @alias module:model/CreateStatistiqueMatchDto
     * @param name {String} name of the stats
     * @param value {String} value of the statistique
     * @param nomEquipe {String} nom de l'équipe
     */
    constructor(name, value, nomEquipe) { 
        
        CreateStatistiqueMatchDto.initialize(this, name, value, nomEquipe);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, name, value, nomEquipe) { 
        obj['name'] = name;
        obj['value'] = value;
        obj['nomEquipe'] = nomEquipe;
    }

    /**
     * Constructs a <code>CreateStatistiqueMatchDto</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CreateStatistiqueMatchDto} obj Optional instance to populate.
     * @return {module:model/CreateStatistiqueMatchDto} The populated <code>CreateStatistiqueMatchDto</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CreateStatistiqueMatchDto();

            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('value')) {
                obj['value'] = ApiClient.convertToType(data['value'], 'String');
            }
            if (data.hasOwnProperty('nomEquipe')) {
                obj['nomEquipe'] = ApiClient.convertToType(data['nomEquipe'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CreateStatistiqueMatchDto</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CreateStatistiqueMatchDto</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of CreateStatistiqueMatchDto.RequiredProperties) {
            if (!data[property]) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // ensure the json data is a string
        if (data['value'] && !(typeof data['value'] === 'string' || data['value'] instanceof String)) {
            throw new Error("Expected the field `value` to be a primitive type in the JSON string but got " + data['value']);
        }
        // ensure the json data is a string
        if (data['nomEquipe'] && !(typeof data['nomEquipe'] === 'string' || data['nomEquipe'] instanceof String)) {
            throw new Error("Expected the field `nomEquipe` to be a primitive type in the JSON string but got " + data['nomEquipe']);
        }

        return true;
    }

/**
     * Returns name of the stats
     * @return {String}
     */
    getName() {
        return this.name;
    }

    /**
     * Sets name of the stats
     * @param {String} name name of the stats
     */
    setName(name) {
        this['name'] = name;
    }
/**
     * Returns value of the statistique
     * @return {String}
     */
    getValue() {
        return this.value;
    }

    /**
     * Sets value of the statistique
     * @param {String} value value of the statistique
     */
    setValue(value) {
        this['value'] = value;
    }
/**
     * Returns nom de l'équipe
     * @return {String}
     */
    getNomEquipe() {
        return this.nomEquipe;
    }

    /**
     * Sets nom de l'équipe
     * @param {String} nomEquipe nom de l'équipe
     */
    setNomEquipe(nomEquipe) {
        this['nomEquipe'] = nomEquipe;
    }

}

CreateStatistiqueMatchDto.RequiredProperties = ["name", "value", "nomEquipe"];

/**
 * name of the stats
 * @member {String} name
 */
CreateStatistiqueMatchDto.prototype['name'] = undefined;

/**
 * value of the statistique
 * @member {String} value
 */
CreateStatistiqueMatchDto.prototype['value'] = undefined;

/**
 * nom de l'équipe
 * @member {String} nomEquipe
 */
CreateStatistiqueMatchDto.prototype['nomEquipe'] = undefined;






export default CreateStatistiqueMatchDto;

