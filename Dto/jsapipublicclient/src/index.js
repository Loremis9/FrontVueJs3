/**
 * Swagger SportApplicatioh - OpenAPI 3.0
 * This is a sample Pet Store Server based on the OpenAPI 3.0 specification. You can find out more about Swagger at [https://swagger.io](https://swagger.io). In the third iteration of the pet store, we've switched to the design first approach! You can now help us improve the API whether it's by making changes to the definition itself or to the code. That way, with time, we can improve the API in general, and expose some of the new features in OAS3.  _If you're looking for the Swagger 2.0/OAS 2.0 version of Petstore, then click [here](https://editor.swagger.io/?url=https://petstore.swagger.io/v2/swagger.yaml). Alternatively, you can load via the `Edit > Load Petstore OAS 2.0` menu option!_  Some useful links: - [The Pet Store repository](https://github.com/swagger-api/swagger-petstore) - [The source API definition for the Pet Store](https://github.com/swagger-api/swagger-petstore/blob/master/src/main/resources/openapi.yaml)
 *
 * The version of the OpenAPI document: 1.0.11
 * Contact: apiteam@swagger.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from './ApiClient';
import CreateEquipeAdverseDto from './model/CreateEquipeAdverseDto';
import CreateEquipeDto from './model/CreateEquipeDto';
import CreateJoueurDto from './model/CreateJoueurDto';
import CreateMatchesDto from './model/CreateMatchesDto';
import CreateStatistiqueMatchDto from './model/CreateStatistiqueMatchDto';
import CreateTournoiDto from './model/CreateTournoiDto';
import CreateUserDto from './model/CreateUserDto';
import DivisionDto from './model/DivisionDto';
import EquipeAdverseDto from './model/EquipeAdverseDto';
import EquipeDto from './model/EquipeDto';
import JoueurDto from './model/JoueurDto';
import MatchesDto from './model/MatchesDto';
import MatchesUpdateDto from './model/MatchesUpdateDto';
import PosteDto from './model/PosteDto';
import StatistiqueMatchDto from './model/StatistiqueMatchDto';
import TournoiDto from './model/TournoiDto';
import UpdateEquipeAdverseDto from './model/UpdateEquipeAdverseDto';
import UpdateEquipeDto from './model/UpdateEquipeDto';
import UserDto from './model/UserDto';
import UserDtoRequest from './model/UserDtoRequest';
import UserDtoResponse from './model/UserDtoResponse';
import DivisionApi from './api/DivisionApi';
import EquipeApi from './api/EquipeApi';
import EquipeAdverseApi from './api/EquipeAdverseApi';
import JoueurApi from './api/JoueurApi';
import MatchApi from './api/MatchApi';
import PosteApi from './api/PosteApi';
import StatMatchApi from './api/StatMatchApi';
import TournoiApi from './api/TournoiApi';
import UserApi from './api/UserApi';


/**
* This is a sample Pet Store Server based on the OpenAPI 3.0 specification. You can find out more about Swagger at [https://swagger.io](https://swagger.io). In the third iteration of the pet store, we&#39;ve switched to the design first approach! You can now help us improve the API whether it&#39;s by making changes to the definition itself or to the code. That way, with time, we can improve the API in general, and expose some of the new features in OAS3.  _If you&#39;re looking for the Swagger 2.0/OAS 2.0 version of Petstore, then click [here](https://editor.swagger.io/?url&#x3D;https://petstore.swagger.io/v2/swagger.yaml). Alternatively, you can load via the &#x60;Edit &gt; Load Petstore OAS 2.0&#x60; menu option!_  Some useful links: - [The Pet Store repository](https://github.com/swagger-api/swagger-petstore) - [The source API definition for the Pet Store](https://github.com/swagger-api/swagger-petstore/blob/master/src/main/resources/openapi.yaml).<br>
* The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
* <p>
* An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
* <pre>
* var SwaggerSportApplicatiohOpenApi30 = require('index'); // See note below*.
* var xxxSvc = new SwaggerSportApplicatiohOpenApi30.XxxApi(); // Allocate the API class we're going to use.
* var yyyModel = new SwaggerSportApplicatiohOpenApi30.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
* and put the application logic within the callback function.</em>
* </p>
* <p>
* A non-AMD browser application (discouraged) might do something like this:
* <pre>
* var xxxSvc = new SwaggerSportApplicatiohOpenApi30.XxxApi(); // Allocate the API class we're going to use.
* var yyy = new SwaggerSportApplicatiohOpenApi30.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* </p>
* @module index
* @version 1.0.11
*/
export {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient,

    /**
     * The CreateEquipeAdverseDto model constructor.
     * @property {module:model/CreateEquipeAdverseDto}
     */
    CreateEquipeAdverseDto,

    /**
     * The CreateEquipeDto model constructor.
     * @property {module:model/CreateEquipeDto}
     */
    CreateEquipeDto,

    /**
     * The CreateJoueurDto model constructor.
     * @property {module:model/CreateJoueurDto}
     */
    CreateJoueurDto,

    /**
     * The CreateMatchesDto model constructor.
     * @property {module:model/CreateMatchesDto}
     */
    CreateMatchesDto,

    /**
     * The CreateStatistiqueMatchDto model constructor.
     * @property {module:model/CreateStatistiqueMatchDto}
     */
    CreateStatistiqueMatchDto,

    /**
     * The CreateTournoiDto model constructor.
     * @property {module:model/CreateTournoiDto}
     */
    CreateTournoiDto,

    /**
     * The CreateUserDto model constructor.
     * @property {module:model/CreateUserDto}
     */
    CreateUserDto,

    /**
     * The DivisionDto model constructor.
     * @property {module:model/DivisionDto}
     */
    DivisionDto,

    /**
     * The EquipeAdverseDto model constructor.
     * @property {module:model/EquipeAdverseDto}
     */
    EquipeAdverseDto,

    /**
     * The EquipeDto model constructor.
     * @property {module:model/EquipeDto}
     */
    EquipeDto,

    /**
     * The JoueurDto model constructor.
     * @property {module:model/JoueurDto}
     */
    JoueurDto,

    /**
     * The MatchesDto model constructor.
     * @property {module:model/MatchesDto}
     */
    MatchesDto,

    /**
     * The MatchesUpdateDto model constructor.
     * @property {module:model/MatchesUpdateDto}
     */
    MatchesUpdateDto,

    /**
     * The PosteDto model constructor.
     * @property {module:model/PosteDto}
     */
    PosteDto,

    /**
     * The StatistiqueMatchDto model constructor.
     * @property {module:model/StatistiqueMatchDto}
     */
    StatistiqueMatchDto,

    /**
     * The TournoiDto model constructor.
     * @property {module:model/TournoiDto}
     */
    TournoiDto,

    /**
     * The UpdateEquipeAdverseDto model constructor.
     * @property {module:model/UpdateEquipeAdverseDto}
     */
    UpdateEquipeAdverseDto,

    /**
     * The UpdateEquipeDto model constructor.
     * @property {module:model/UpdateEquipeDto}
     */
    UpdateEquipeDto,

    /**
     * The UserDto model constructor.
     * @property {module:model/UserDto}
     */
    UserDto,

    /**
     * The UserDtoRequest model constructor.
     * @property {module:model/UserDtoRequest}
     */
    UserDtoRequest,

    /**
     * The UserDtoResponse model constructor.
     * @property {module:model/UserDtoResponse}
     */
    UserDtoResponse,

    /**
    * The DivisionApi service constructor.
    * @property {module:api/DivisionApi}
    */
    DivisionApi,

    /**
    * The EquipeApi service constructor.
    * @property {module:api/EquipeApi}
    */
    EquipeApi,

    /**
    * The EquipeAdverseApi service constructor.
    * @property {module:api/EquipeAdverseApi}
    */
    EquipeAdverseApi,

    /**
    * The JoueurApi service constructor.
    * @property {module:api/JoueurApi}
    */
    JoueurApi,

    /**
    * The MatchApi service constructor.
    * @property {module:api/MatchApi}
    */
    MatchApi,

    /**
    * The PosteApi service constructor.
    * @property {module:api/PosteApi}
    */
    PosteApi,

    /**
    * The StatMatchApi service constructor.
    * @property {module:api/StatMatchApi}
    */
    StatMatchApi,

    /**
    * The TournoiApi service constructor.
    * @property {module:api/TournoiApi}
    */
    TournoiApi,

    /**
    * The UserApi service constructor.
    * @property {module:api/UserApi}
    */
    UserApi
};
